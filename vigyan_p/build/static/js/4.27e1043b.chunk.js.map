{"version":3,"file":"static/js/4.27e1043b.chunk.js","mappings":"wJAGA,MAoGA,EApGqBA,KACnB,MAAMC,EAAQ,CACZ,CACEC,MAAO,iBACPC,MAAO,IACPC,MAAMC,EAAAA,EAAAA,KAACC,EAAAA,IAAgB,CAACC,KAAM,GAAIC,UAAU,0BAE9C,CACEN,MAAO,mBACPC,MAAO,KACPC,MAAMC,EAAAA,EAAAA,KAACI,EAAAA,IAAc,CAACF,KAAM,GAAIC,UAAU,yBAE5C,CACEN,MAAO,mBACPC,MAAO,GACPC,MAAMC,EAAAA,EAAAA,KAACK,EAAAA,IAAQ,CAACH,KAAM,GAAIC,UAAU,yBAIjCG,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CAAC,EAAG,EAAG,KACrCC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,GACzCG,GAAaC,EAAAA,EAAAA,QAAO,OAE1BC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBACnBC,IAAc,IAAZC,GAAMD,EACFC,EAAMC,iBAAmBT,IAC3BU,IACAT,GAAe,GACjB,GAEF,CAAEU,UAAW,KAIf,OADIT,EAAWU,SAASP,EAASQ,QAAQX,EAAWU,SAC7C,IAAMP,EAASS,YAAY,GACjC,CAACd,IAEJ,MAAMU,EAAkBA,KACtBvB,EAAM4B,SAAQ,CAACC,EAAMC,KAEnB,IAAIC,EAEJ,MAAMC,EAAQC,IACPF,IAAWA,EAAYE,GAC5B,MAAMC,EAAWC,KAAKC,KAAKH,EAAYF,GALxB,IAK+C,GACxDM,EAAeF,KAAKG,KAAKT,EAAK3B,MAAQgC,GAExCxB,EAAOoB,KAAWO,GACpB1B,GAAW4B,IACT,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQV,GAASO,EACVG,CAAO,IAIdN,EAAW,EACbO,sBAAsBT,GAEtBrB,GAAW4B,IACT,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQV,GAASD,EAAK3B,MACfsC,CAAO,GAElB,EAGFC,sBAAsBT,EAAK,GAC3B,EAGJ,OACE5B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+DAA8DmC,UAC3EC,EAAAA,EAAAA,MAAA,WACEC,IAAK7B,EACLR,UAAU,0IAAyImC,SAAA,EAEnJtC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4EAA2EmC,SAAC,gBAI1FtC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4FAA2FmC,SACvG1C,EAAM6C,KAAI,CAAChB,EAAMiB,KAChBH,EAAAA,EAAAA,MAAA,OAEEpC,UAAU,wFAAuFmC,SAAA,CAEhGb,EAAK1B,MACNwC,EAAAA,EAAAA,MAAA,MAAIpC,UAAU,+CAA8CmC,SAAA,CACzDhC,EAAOoC,GAAKC,iBAAiB,QAEhC3C,EAAAA,EAAAA,KAAA,KAAGG,UAAU,6BAA4BmC,SAAEb,EAAK5B,UAP3C6C,WAYT,C","sources":["components/Home/StatsCounter.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FaProjectDiagram, FaUserGraduate, FaTrophy } from \"react-icons/fa\";\r\n\r\nconst StatsCounter = () => {\r\n  const stats = [\r\n    {\r\n      label: \"Projects Built\",\r\n      count: 120,\r\n      icon: <FaProjectDiagram size={40} className=\"text-yellow-400 mb-2\" />,\r\n    },\r\n    {\r\n      label: \"Students Trained\",\r\n      count: 120000,\r\n      icon: <FaUserGraduate size={40} className=\"text-green-400 mb-2\" />,\r\n    },\r\n    {\r\n      label: \"Competitions Won\",\r\n      count: 18,\r\n      icon: <FaTrophy size={40} className=\"text-red-400 mb-2\" />,\r\n    },\r\n  ];\r\n\r\n  const [counts, setCounts] = useState([0, 0, 0]);\r\n  const [hasAnimated, setHasAnimated] = useState(false);\r\n  const sectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting && !hasAnimated) {\r\n          animateCounters();\r\n          setHasAnimated(true);\r\n        }\r\n      },\r\n      { threshold: 0.5 }\r\n    );\r\n\r\n    if (sectionRef.current) observer.observe(sectionRef.current);\r\n    return () => observer.disconnect();\r\n  }, [hasAnimated,]);\r\n\r\n  const animateCounters = () => {\r\n    stats.forEach((stat, index) => {\r\n      const duration = 2000;\r\n      let startTime;\r\n\r\n      const step = (timestamp) => {\r\n        if (!startTime) startTime = timestamp;\r\n        const progress = Math.min((timestamp - startTime) / duration, 1);\r\n        const currentCount = Math.ceil(stat.count * progress);\r\n\r\n        if (counts[index] !== currentCount) {\r\n          setCounts((prevCounts) => {\r\n            const updated = [...prevCounts];\r\n            updated[index] = currentCount;\r\n            return updated;\r\n          });\r\n        }\r\n\r\n        if (progress < 1) {\r\n          requestAnimationFrame(step);\r\n        } else {\r\n          setCounts((prevCounts) => {\r\n            const updated = [...prevCounts];\r\n            updated[index] = stat.count;\r\n            return updated;\r\n          });\r\n        }\r\n      };\r\n\r\n      requestAnimationFrame(step);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\" flex items-center justify-center px-4 sm:px-6 md:px-8  mb-9\">\r\n      <section\r\n        ref={sectionRef}\r\n        className=\"w-full max-w-xs sm:max-w-2xl md:max-w-4xl lg:max-w-5xl xl:max-w-6xl mx-auto py-10 px-4 sm:px-6 md:px-8 bg-gray-900 rounded-xl shadow-md\"\r\n      >\r\n        <h3 className=\"text-xl sm:text-4xl md:text-5xl font-bold text-center text-teal-400 mb-10\">\r\n          Our Impact\r\n        </h3>\r\n\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-center sm:items-stretch gap-6 text-center\">\r\n          {stats.map((stat, idx) => (\r\n            <div\r\n              key={idx}\r\n              className=\"w-full sm:w-1/3 px-4 py-6 bg-gray-800 rounded-lg shadow-md flex flex-col items-center\"\r\n            >\r\n              {stat.icon}\r\n              <h3 className=\"text-3xl sm:text-4xl font-bold text-teal-500\">\r\n                {counts[idx].toLocaleString()}+\r\n              </h3>\r\n              <p className=\"text-lg text-gray-300 mt-1\">{stat.label}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsCounter;\r\n"],"names":["StatsCounter","stats","label","count","icon","_jsx","FaProjectDiagram","size","className","FaUserGraduate","FaTrophy","counts","setCounts","useState","hasAnimated","setHasAnimated","sectionRef","useRef","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","animateCounters","threshold","current","observe","disconnect","forEach","stat","index","startTime","step","timestamp","progress","Math","min","currentCount","ceil","prevCounts","updated","requestAnimationFrame","children","_jsxs","ref","map","idx","toLocaleString"],"sourceRoot":""}